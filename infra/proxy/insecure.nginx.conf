user nginx;
worker_processes 1;
error_log /dev/stderr warn;
events {
    worker_connections 1024;
}

http {
    server_names_hash_bucket_size   64;
    server_tokens                   off;
    sendfile                        off;
    include mime.types;
    default_type application/octet-stream;
    proxy_buffering off;
    proxy_buffer_size 4k;
    proxy_read_timeout 300s;
    reset_timedout_connection on;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
            '$status $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /dev/stdout main buffer=16k;

    # add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    upstream api_backend  {
        server API_BACKEND_HOST:API_BACKEND_PORT;
    }

    # Following Rules:
    # / => /landing/
    # /landing => /landing/
    # /webui => /webui/
    # /webui/assets/x/y/z ==> /z/y/z
    # /api, /doc, /redoc, /boardcast => api
    # /x => /index.html

    server {
        listen  INSECURE_LISTEN_PORT;
        server_name _;
        root /var/www/app;
        index index.html;

        location = / {
            return $scheme://$http_host/landing/;
        }

        location = /landing {
            return $scheme://$http_host/landing/;
        }

        location = /landing/ {
            try_files /landing/index.html =404;
        }

        location = /landing/index.html {
            try_files /landing/index.html =404;
        }

        location ~ /landing/(?<content>.+) {
            try_files $uri /landing/$content =404;
        }

        location = /webui {
            return $scheme://$http_host/webui/;
        }

        location = /webui/ {
            try_files /webui/index.html =404;
        }

        location = /webui/index.html {
            try_files /webui/index.html =404;
        }

        # forward api requests to api
        location /api {
            gzip off;
            client_max_body_size '0';
            proxy_pass API_BACKEND_PROTO://api_backend/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # forward api requests to api
        location /docs {
            gzip off;
            client_max_body_size '0';
            proxy_pass API_BACKEND_PROTO://api_backend/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /redoc {
            gzip off;
            client_max_body_size '0';
            proxy_pass API_BACKEND_PROTO://api_backend/redoc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /broadcast {
            gzip off;
            client_max_body_size '0';
            proxy_pass API_BACKEND_PROTO://api_backend/broadcast;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location ~ /webui/assets/(?<content>.+) {
            try_files $uri /webui/$content =404;
        }

        location / {
            try_files /webui/$uri /webui/$uri/ /webui/index.html;
        }


    }
}
